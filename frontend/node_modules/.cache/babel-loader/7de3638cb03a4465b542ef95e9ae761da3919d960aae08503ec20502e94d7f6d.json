{"ast":null,"code":"var _jsxFileName = \"/Users/carykuang/Desktop/wififinder/src/components/Map.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, Rectangle } from 'react-leaflet';\nimport L from 'leaflet';\nimport \"leaflet/dist/leaflet.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst sanFranciscoBounds = new L.LatLngBounds(new L.LatLng(37.700350, -122.517128),\n// Southwest corner\nnew L.LatLng(37.814407, -122.390099) // Northeast corner\n);\n\nconst exampleLocations = [{\n  name: 'Golden Gate Bridge',\n  coordinates: [37.8199, -122.4783]\n}, {\n  name: \"Fisherman's Wharf\",\n  coordinates: [37.8083, -122.4150]\n}, {\n  name: 'Union Square',\n  coordinates: [37.7881, -122.4076]\n}, {\n  name: 'Alcatraz Island',\n  coordinates: [37.8267, -122.4233]\n}, {\n  name: 'Chinatown',\n  coordinates: [37.7941, -122.4078]\n}];\nconst initialCoordinates = [37.7749, -122.4194];\nconst mapOptions = {\n  center: initialCoordinates,\n  zoom: 13,\n  zoomControl: false,\n  maxZoom: 13,\n  minZoom: 13\n};\nfunction SanFranciscoMap() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MapContainer, {\n      ...mapOptions,\n      className: 'h-screen w-screen',\n      maxBounds: sanFranciscoBounds,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"\\xA9 <a href=\\\"https://www.stadiamaps.com/\\\" target=\\\"_blank\\\">Stadia Maps</a> \\xA9 <a href=\\\"https://openmaptiles.org/\\\" target=\\\"_blank\\\">OpenMapTiles</a> \\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: [51.505, -0.09],\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_c = SanFranciscoMap;\nexport default SanFranciscoMap;\n\n// helper section \nconst calculateDistance = (coord1, coord2) => {\n  const radianFactor = Math.PI / 180;\n  const earthRadius = 6371000; // Radius of the Earth in meters\n  const lat1 = coord1[0] * radianFactor;\n  const lat2 = coord2[0] * radianFactor;\n  const diffLat = (coord2[0] - coord1[0]) * radianFactor;\n  const diffLon = (coord2[1] - coord1[1]) * radianFactor;\n  const a = Math.sin(diffLat / 2) * Math.sin(diffLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(diffLon / 2) * Math.sin(diffLon / 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n  return earthRadius * c;\n};\nconst nearbyLocations = exampleLocations.filter(location => {\n  const distance = calculateDistance(clickedCoords, location.coordinates);\n  return distance <= 1000; // Adjust the distance threshold (in meters) as needed.\n});\nvar _c;\n$RefreshReg$(_c, \"SanFranciscoMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Marker","Popup","Rectangle","L","jsxDEV","_jsxDEV","sanFranciscoBounds","LatLngBounds","LatLng","exampleLocations","name","coordinates","initialCoordinates","mapOptions","center","zoom","zoomControl","maxZoom","minZoom","SanFranciscoMap","children","className","maxBounds","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","position","_c","calculateDistance","coord1","coord2","radianFactor","Math","PI","earthRadius","lat1","lat2","diffLat","diffLon","a","sin","cos","c","atan2","sqrt","nearbyLocations","filter","location","distance","clickedCoords","$RefreshReg$"],"sources":["/Users/carykuang/Desktop/wififinder/src/components/Map.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer,Marker,Popup ,Rectangle} from 'react-leaflet';\nimport L from 'leaflet';\n\nimport \"leaflet/dist/leaflet.css\"\nconst sanFranciscoBounds = new L.LatLngBounds(\n    new L.LatLng(37.700350, -122.517128), // Southwest corner\n    new L.LatLng(37.814407, -122.390099)  // Northeast corner\n  );\n\n  const exampleLocations = [\n    { name: 'Golden Gate Bridge', coordinates: [37.8199, -122.4783] },\n    { name: \"Fisherman's Wharf\", coordinates: [37.8083, -122.4150] },\n    { name: 'Union Square', coordinates: [37.7881, -122.4076] },\n    { name: 'Alcatraz Island', coordinates: [37.8267, -122.4233] },\n    { name: 'Chinatown', coordinates: [37.7941, -122.4078] },\n  ];\n\n  const initialCoordinates = [37.7749, -122.4194];\n  const mapOptions = {\n    center: initialCoordinates,\n    zoom: 13,\n    zoomControl: false,\n    maxZoom: 13,\n    minZoom : 13\n  };\n\n  \n\n\n\n\n  function SanFranciscoMap() {\n    return (\n      <div>\n        <MapContainer  {...mapOptions}  className = {'h-screen w-screen'} maxBounds={sanFranciscoBounds}>\n      <TileLayer\n        attribution='&copy; <a href=\"https://www.stadiamaps.com/\" target=\"_blank\">Stadia Maps</a> &copy; <a href=\"https://openmaptiles.org/\" target=\"_blank\">OpenMapTiles</a> &copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n        url=\"https://tiles.stadiamaps.com/tiles/alidade_smooth/{z}/{x}/{y}{r}.png\"\n      />\n            <Marker position={[51.505, -0.09]}>\n        <Popup>\n          A pretty CSS3 popup. <br /> Easily customizable.\n        </Popup>\n      </Marker>\n\n    </MapContainer></div>\n\n    );\n  }\n  \n  export default SanFranciscoMap;\n  \n\n  // helper section \n  const calculateDistance = (coord1, coord2) => {\n    const radianFactor = Math.PI / 180;\n    const earthRadius = 6371000; // Radius of the Earth in meters\n    const lat1 = coord1[0] * radianFactor;\n    const lat2 = coord2[0] * radianFactor;\n    const diffLat = (coord2[0] - coord1[0]) * radianFactor;\n    const diffLon = (coord2[1] - coord1[1]) * radianFactor;\n    const a = Math.sin(diffLat / 2) * Math.sin(diffLat / 2) + Math.cos(lat1) * Math.cos(lat2) * Math.sin(diffLon / 2) * Math.sin(diffLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    return earthRadius * c;\n  };\n\n  const nearbyLocations = exampleLocations.filter((location) => {\n    const distance = calculateDistance(clickedCoords, location.coordinates);\n    return distance <= 1000; // Adjust the distance threshold (in meters) as needed.\n  });"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}